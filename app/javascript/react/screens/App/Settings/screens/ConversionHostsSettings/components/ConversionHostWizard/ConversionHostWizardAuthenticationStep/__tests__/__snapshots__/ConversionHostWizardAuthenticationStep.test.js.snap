// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`conversion host wizard authentication step renders correctly in the initial state for RHV 1`] = `
<Connect(Form(ConversionHostWizardAuthenticationStep))
  _reduxForm={null}
  destroyOnUnmount={false}
  enableReinitialize={false}
  forceUnregisterOnUnmount={true}
  form="conversionHostWizardAuthenticationStep"
  getFormState={[Function]}
  initialValues={
    Object {
      "conversionHostSshKey": Object {
        "body": "",
        "filename": "",
      },
      "openstackCaCerts": Object {
        "body": "",
        "filename": "",
      },
      "openstackUser": "cloud-user",
      "transformationMethod": "VDDK",
      "verifyOpenstackCerts": false,
      "vmwareSshKey": Object {
        "body": "",
        "filename": "",
      },
    }
  }
  keepDirtyOnReinitialize={false}
  persistentSubmitErrors={false}
  pure={true}
  selectedProviderType="rhevm"
  selectedTransformationMethod={null}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  verifyOpenstackCerts={null}
/>
`;

exports[`conversion host wizard authentication step renders the redux-form wrapper correctly 1`] = `
<Hoc
  destroyOnUnmount={false}
  enableReinitialize={false}
  forceUnregisterOnUnmount={true}
  form="conversionHostWizardAuthenticationStep"
  forwardedRef={null}
  getFormState={[Function]}
  initialValues={
    Object {
      "conversionHostSshKey": Object {
        "body": "",
        "filename": "",
      },
      "openstackCaCerts": Object {
        "body": "",
        "filename": "",
      },
      "openstackUser": "cloud-user",
      "transformationMethod": "VDDK",
      "verifyOpenstackCerts": false,
      "vmwareSshKey": Object {
        "body": "",
        "filename": "",
      },
    }
  }
  keepDirtyOnReinitialize={false}
  persistentSubmitErrors={false}
  pure={true}
  selectedProviderType="rhevm"
  selectedTransformationMethod={null}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  verifyOpenstackCerts={null}
/>
`;
